[{"/home/rohan/Desktop/appUI/src/createEmotionCache.ts":"1","/home/rohan/Desktop/appUI/src/materialUI/Image.slicder.tsx":"2","/home/rohan/Desktop/appUI/src/materialUI/Loder.tsx":"3","/home/rohan/Desktop/appUI/src/pages/_app.tsx":"4","/home/rohan/Desktop/appUI/src/pages/_document.tsx":"5","/home/rohan/Desktop/appUI/src/pages/api/hello.ts":"6","/home/rohan/Desktop/appUI/src/pages/index.tsx":"7","/home/rohan/Desktop/appUI/src/redux/cardSlice.ts":"8","/home/rohan/Desktop/appUI/src/redux/store.ts":"9","/home/rohan/Desktop/appUI/src/styles/welcome.module.tsx":"10","/home/rohan/Desktop/appUI/src/theme.ts":"11","/home/rohan/Desktop/appUI/src/componants/Login.tsx":"12","/home/rohan/Desktop/appUI/src/componants/Otp.tsx":"13","/home/rohan/Desktop/appUI/src/componants/Photoo.tsx":"14","/home/rohan/Desktop/appUI/src/componants/Roomcopasity.tsx":"15","/home/rohan/Desktop/appUI/src/componants/Signup.module.tsx":"16","/home/rohan/Desktop/appUI/src/materialUI/Circularloader.tsx":"17","/home/rohan/Desktop/appUI/src/materialUI/Statusbar.tsx":"18","/home/rohan/Desktop/appUI/src/pages/hotel/Addrooms.tsx":"19","/home/rohan/Desktop/appUI/src/pages/hotel/Amenities.tsx":"20","/home/rohan/Desktop/appUI/src/pages/hotel/Capasity.tsx":"21","/home/rohan/Desktop/appUI/src/pages/hotel/Enterdetails.tsx":"22","/home/rohan/Desktop/appUI/src/pages/hotel/Policy.tsx":"23","/home/rohan/Desktop/appUI/src/pages/hotel/Services.tsx":"24","/home/rohan/Desktop/appUI/src/pages/hotel/Uploadroomimage.tsx":"25","/home/rohan/Desktop/appUI/src/pages/hotel/Varification.tsx":"26","/home/rohan/Desktop/appUI/src/pages/Welcome.tsx":"27","/home/rohan/Desktop/appUI/src/pages/auth/Index.tsx":"28"},{"size":684,"mtime":1690663435315,"results":"29","hashOfConfig":"30"},{"size":1781,"mtime":1690663435315,"results":"31","hashOfConfig":"30"},{"size":1541,"mtime":1691846209041,"results":"32","hashOfConfig":"30"},{"size":1304,"mtime":1691414155107,"results":"33","hashOfConfig":"30"},{"size":2905,"mtime":1690663435315,"results":"34","hashOfConfig":"30"},{"size":307,"mtime":1690663435315,"results":"35","hashOfConfig":"30"},{"size":871,"mtime":1690663435315,"results":"36","hashOfConfig":"30"},{"size":592,"mtime":1690920017845,"results":"37","hashOfConfig":"30"},{"size":432,"mtime":1690663435319,"results":"38","hashOfConfig":"30"},{"size":0,"mtime":1690663435331,"results":"39","hashOfConfig":"30"},{"size":603,"mtime":1690663435331,"results":"40","hashOfConfig":"30"},{"size":3855,"mtime":1691845562251,"results":"41","hashOfConfig":"30"},{"size":2500,"mtime":1691844846964,"results":"42","hashOfConfig":"30"},{"size":2165,"mtime":1691844872240,"results":"43","hashOfConfig":"30"},{"size":6884,"mtime":1691845575154,"results":"44","hashOfConfig":"30"},{"size":3617,"mtime":1691844951498,"results":"45","hashOfConfig":"30"},{"size":399,"mtime":1690663435315,"results":"46","hashOfConfig":"30"},{"size":1942,"mtime":1691845001810,"results":"47","hashOfConfig":"30"},{"size":3700,"mtime":1691845079632,"results":"48","hashOfConfig":"30"},{"size":9470,"mtime":1691845129677,"results":"49","hashOfConfig":"30"},{"size":2651,"mtime":1691845170693,"results":"50","hashOfConfig":"30"},{"size":7121,"mtime":1691845210422,"results":"51","hashOfConfig":"30"},{"size":10079,"mtime":1691845244019,"results":"52","hashOfConfig":"30"},{"size":4163,"mtime":1691845277331,"results":"53","hashOfConfig":"30"},{"size":4459,"mtime":1691845309252,"results":"54","hashOfConfig":"30"},{"size":9177,"mtime":1691845357765,"results":"55","hashOfConfig":"30"},{"size":1316,"mtime":1691845695797,"results":"56","hashOfConfig":"30"},{"size":1535,"mtime":1691845537348,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10le3mk",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rohan/Desktop/appUI/src/createEmotionCache.ts",[],[],"/home/rohan/Desktop/appUI/src/materialUI/Image.slicder.tsx",[],[],"/home/rohan/Desktop/appUI/src/materialUI/Loder.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/_app.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/_document.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/api/hello.ts",[],[],"/home/rohan/Desktop/appUI/src/pages/index.tsx",[],[],"/home/rohan/Desktop/appUI/src/redux/cardSlice.ts",[],[],"/home/rohan/Desktop/appUI/src/redux/store.ts",[],[],"/home/rohan/Desktop/appUI/src/styles/welcome.module.tsx",[],[],"/home/rohan/Desktop/appUI/src/theme.ts",[],[],"/home/rohan/Desktop/appUI/src/componants/Login.tsx",[],[],"/home/rohan/Desktop/appUI/src/componants/Otp.tsx",[],[],"/home/rohan/Desktop/appUI/src/componants/Photoo.tsx",[],[],"/home/rohan/Desktop/appUI/src/componants/Roomcopasity.tsx",[],[],"/home/rohan/Desktop/appUI/src/componants/Signup.module.tsx",[],[],"/home/rohan/Desktop/appUI/src/materialUI/Circularloader.tsx",[],[],"/home/rohan/Desktop/appUI/src/materialUI/Statusbar.tsx",["146"],[],"\nimport * as React from 'react';\nimport LinearProgress, { LinearProgressProps } from '@mui/material/LinearProgress';\n\nimport Box from '@mui/material/Box';\nimport styles from \"../styles/enterdetails.module.css\"\n\n\nconst Statusbar = ({updatevalue,prieveasevalue}:any) => {\n  \n    const [progress, setProgress] = React.useState(prieveasevalue);\n    \n    \n    \n\n    React.useEffect(() => {\n      const timer = setInterval(() => {\n        console.log('jjj');\n        \n        \n        \n    \n           setProgress((oldProgress: number) => {\n          if (oldProgress ===  Math.max(progress,updatevalue)) {\n             clearInterval(timer);\n          }\n          const diff = Math.random() * 10;\n          \n          return Math.min(oldProgress + diff, updatevalue);\n\n        }); \n        \n        \n        \n        \n      }, 500);\n  \n      \n    }, [updatevalue]);\n  \n    return (\n        <>\n        <div className={styles.bar}>\n          <Box sx={{ width: '100%' }}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        \n          </Box>\n      \n      <div className={styles.dot_rap}>\n       \n            <div style={progress>=12?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=25?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=38?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=49?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=62?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=74?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=87?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            <div style={progress>=100?{background:\" #1FB906\"}:{background: \"#7B8794\"}}></div>\n            \n        </div>\n        </div>\n      </>\n    );\n}\n\nexport default Statusbar","/home/rohan/Desktop/appUI/src/pages/hotel/Addrooms.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/hotel/Amenities.tsx",["147"],[],"import React,{use, useEffect, useState} from \"react\";\nimport style from \"./../../styles/adamenies.module.css\";\nimport Image from \"next/image\";\nimport Logo from \"./../../../public/Frame 2655 1.png\";\nimport Statusbar from \"@/materialUI/Statusbar\";\nimport drowp from \"./../../../public/Group (1).png\";\nimport televistion from \"./../../../public/adamines/televition.svg\";\nimport frees from \"./../../../public/adamines/frees.svg\";\nimport internate from \"./../../../public/adamines/wifi.svg\";\nimport baathroom from \"./../../../public/adamines/bathroom.svg\";\nimport cctv from \"./../../../public/adamines/cctvs.svg\";\nimport clothrook from \"./../../../public/adamines/rekk.svg\";\nimport stydytable from \"./../../../public/adamines/stusdytable.svg\";\nimport houseclenign from \"./../../../public/adamines/housecling.svg\";\nimport loundry from \"./../../../public/adamines/luandry.svg\";\nimport firedafaty from \"./../../../public/adamines/firesafety.svg\";\nimport kingbad from \"./../../../public/adamines/kingbed.svg\";\nimport singlebad from \"./../../../public/adamines/singlebad.svg\";\nimport AC from \"./../../../public/adamines/ac.svg\";\nimport windhow from \"./../../../public/adamines/window.svg\";\nimport balcony from \"./../../../public/adamines/balcony1.svg\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\n\n\nconst Amenities = () => {\n \n  \n\n  const count = useSelector((state: any) => state.counter.value);\n  var tempArray:any =[]\n  const clone= count\n  console.log(count.length);\n\n  count.forEach((name:string)=>tempArray.push({nameof_amenities:name,types:[\"Window\",\"Balcony\"]})\n  )\n  tempArray.push({nameof_amenities:\"general_amenities\",types:[\"Refrigerator\" ,\"Bathtub\"]})\n  console.log(tempArray);\n  \n  \n  const addRemove=(e:any ,type:string)=>{\n    console.log(type);\n    \n    const value = e.target.name\n    console.log(value);\n    console.log(tempArray);\n    \n    const index = tempArray.findIndex((obj:any)=> obj.nameof_amenities==type)\n    console.log(index);\n    console.log(tempArray[index]);\n    \n    const  eleIndex = tempArray[index].types.findIndex((ele:string)=>ele==value)\n    if(eleIndex>-1){\n      \n      \n      const data =  tempArray[index].types.filter((arrayEle:string)=>arrayEle!=value)\n      console.log(data);\n      \n      tempArray[index].types= data\n    }\n    else{\n      tempArray[index].types.push(value)\n\n    }\n      console.log(tempArray);\n  \n\n\n  }\n  const requestHandler =()=>{\n    axios.post(\"https://revivohotelmanagment-app.onrender.com/api/hoteldata/room/amenities\",{\n      amenities:tempArray\n      \n    \n    },{\n      headers:{authorization:localStorage.getItem(\"SavedToken\")}\n    }\n    ).then(res=>console.log(res)\n    ).catch(err=>console.log(err)\n    )\n\n  }\n        \n\n  return (  \n    <div className={style.main}>\n    \n      <div className={style.into_cont}>\n        <h1>Add Amenities</h1> <Image src={Logo} alt=\"dd\" />\n      </div>\n      <div>\n        <Statusbar  prieveasevalue={62} updatevalue={74}/>\n      </div>\n      <div className={style.adamenies_rap}>\n        <div className={style.general_cont}>\n          <div className={style.ganral_text}>\n            <h1>General amenities</h1>\n            <Image src={drowp} alt=\"dd\" />\n          </div>\n\n          <div className={style.service_cont}>\n            <input id=\"kitchen\" name=\"Television\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} type=\"checkbox\" />\n            <label htmlFor=\"kitchen\">\n              <Image src={televistion} alt=\"serverces\" />\n              <h1>Television</h1>\n            </label>\n            <input\n              id=\"house\"\n              \n              name=\"Refrigerator\"\n              defaultChecked\n              type=\"checkbox\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} \n            />\n            <label htmlFor=\"house\">\n              <Image src={frees} alt=\"serverces\" />\n              <h1>Refrigerator</h1>\n            </label>\n            <input id=\"lundary\" name=\"Internet\" onChange={(e:any)=>addRemove(e,\"general_amenities\")}  type=\"checkbox\" />\n            <label htmlFor=\"lundary\">\n              <Image src={internate} alt=\"serverces\" />\n              <h1>Internet</h1>\n            </label>\n            <input id=\"spa\" name=\"Bathtub\" onChange={(e:any)=>addRemove(e,\"general_amenities\")}  defaultChecked type=\"checkbox\" />\n            <label htmlFor=\"spa\">\n              <Image src={baathroom} alt=\"serverces\" />\n              <h1>Bathtub</h1>\n            </label>\n            <input id=\"gym\" name=\"CCTV\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} type=\"checkbox\" />\n            <label htmlFor=\"gym\">\n              <Image src={cctv} alt=\"serverces\" />\n              <h1>CCTV</h1>\n            </label>\n            <input id=\"bankuit\" name=\"Clothes rack\" onChange={(e:any)=>addRemove(e,\"general_amenities\")}  type=\"checkbox\" />\n            <label htmlFor=\"bankuit\">\n              <Image src={clothrook} alt=\"serverces\" />\n              <h1>Clothes rack</h1>\n            </label>\n            <input id=\"salon\" name=\"Study Table\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} type=\"checkbox\" />\n            <label htmlFor=\"salon\">\n              <Image src={stydytable} alt=\"serverces\" />\n              <h1>Study Table</h1>\n            </label>\n            <input id=\"pool\" name=\"Housekeeping\"  onChange={(e:any)=>addRemove(e,\"general_amenities\")}type=\"checkbox\" />\n            <label htmlFor=\"pool\">\n              <Image\n                src={houseclenign}\n                style={{ stroke: \"green\" }}\n                alt=\"serverces\"\n              />\n              <h1>Housekeeping</h1>\n            </label>\n            <input id=\"Laundry\" name=\"Laundry\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} type=\"checkbox\" />\n            <label htmlFor=\"Laundry\">\n              <Image\n                src={loundry}\n                style={{ stroke: \"green\" }}\n                alt=\"serverces\"\n              />\n              <h1>Laundry</h1>\n            </label>\n            <input id=\"Fire Safety\" name=\"Fire Safety\" onChange={(e:any)=>addRemove(e,\"general_amenities\")} type=\"checkbox\" />\n            <label htmlFor=\"Fire Safety\">\n              <Image\n                src={firedafaty}\n                style={{ stroke: \"green\" }}\n                alt=\"serverces\"\n              />\n              <h1>Fire Safety</h1>\n            </label>\n          </div>\n        </div>\n        {count.map((room:string, index:number) => (\n          sohan(room,index,addRemove )\n        ))}\n      </div>\n      <div className={style.btn_cont}>\n            <button className={style.back_btn}  >Back</button> <button  onClick={requestHandler}  className={style.cont}>Contineu</button>\n\n        </div>\n    \n    </div>\n  );\n};\nfunction sohan (room:string,index:number,addRemove:any){\n    const [show_admin,set_show_adamini] = useState(false)\n\n \n\n    return (\n        <div key={index} className={style.room_adami_rap}>\n            <div className={style.room_type}>\n              <h1>\n                {room} \n              </h1><Image src={drowp} onClick={()=>set_show_adamini(!show_admin)} alt=\"s\" />\n            </div>\n            <div style={show_admin?{display:\"none\"}:{display:\"grid\"}} className={style.adamenies_types}>\n              <input id={room+\"King Sized Bed\"} name=\"King Sized Bed\"onChange={(e:any)=>addRemove(e,room)} type=\"checkbox\" />\n              <label htmlFor={room+\"King Sized Bed\"}>\n                <Image src={kingbad} alt=\"serverces\" />\n                <h1>King Sized Bed</h1>\n              </label>\n              <input id={room+\"Single bed\"} name=\"Single bed\" onChange={(e:any)=>addRemove(e,room)} type=\"checkbox\" />\n              <label htmlFor={room+\"Single bed\"}>\n                <Image\n                  src={singlebad}\n                  style={{ stroke: \"green\" }}\n                  alt=\"serverces\"\n                />\n                <h1>Swimming pool</h1>\n              </label>\n              <input id={room+\"Queen sized bed\"} name=\"Queen sized bed\"onChange={(e:any)=>addRemove(e,room)} type=\"checkbox\" />\n              <label htmlFor={room+\"Queen sized bed\"}>\n                <Image\n                  src={kingbad}\n                  style={{ stroke: \"green\" }}\n                  alt=\"serverces\"\n                />\n                <h1>Queen sized bed</h1>\n              </label>\n              <input id={room+\"AC\"} name=\"AC\" onChange={(e:any)=>addRemove(e,room)} type=\"checkbox\" />\n              <label htmlFor={room+\"AC\"}>\n                <Image\n                  src={AC}\n                  style={{ stroke: \"green\" }}\n                  alt=\"serverces\"\n                />\n                <h1>AC</h1>\n              </label>\n              <input id={room+\"Window\"} name=\"Window\" onChange={(e:any)=>addRemove(e,room)} defaultChecked type=\"checkbox\" />\n              <label htmlFor={room+\"Window\"}>\n                <Image\n                  src={windhow}\n                  style={{ stroke: \"green\" }}\n                  alt=\"serverces\"\n                />\n                <h1>Window</h1>\n              </label>\n              <input id={room+\"Balcony\"} defaultChecked onChange={(e:any)=>addRemove(e,room)} name=\"Balcony\" type=\"checkbox\" />\n              <label htmlFor={room+\"Balcony\"}>\n                <Image\n                  src={balcony}\n                  style={{ stroke: \"green\" }}\n                  alt=\"serverces\"\n                />\n                <h1>Balcony</h1>\n              </label>\n            </div>\n           \n          </div>\n        \n    )\n}\nexport default Amenities;\n","/home/rohan/Desktop/appUI/src/pages/hotel/Capasity.tsx",["148"],[],"import React from 'react'\nimport Image from 'next/dist/client/image'\nimport style from './../../styles/capasity.module.css'\nimport Logo from './../../../public/Frame 2655 1.png'\nimport Statusbar from '@/materialUI/Statusbar'\nimport Room from '../../componants/Roomcopasity'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport joi, { object, valid } from 'joi'\nimport { useRouter } from 'next/router'\nimport { UseSelector} from 'react-redux/es/hooks/useSelector'\n\nimport axios from 'axios'\n\n\n\n\n\n\n\nconst Capasity = () => { \n    const [roomsdata,setroomsdata] = React.useState<any>([])\n    const count = useSelector((state: any) => state.counter.value);\n    const [l,setl] =React.useState<boolean>(false)\n    const n :number= count.length\n    const Schema =joi.string()\n    const router = useRouter()\n    console.log(count);\n    \n    // if(count<=0){\n    //   router.push(\"http://localhost:3000/hotel/addrooms\")\n    //   console.log(\"go bakh\");\n      \n\n    // }\n  \n    \n    React.useEffect(()=>{\n        var clone =count\n       \n        let pushedData:any=[]\n        clone.forEach((room: any) => {\n\n              pushedData=([ ...pushedData,{ room_type: room ,rooms:[],base_price:\"\",nu_guests:\"\"}])\n\n        });\n        setroomsdata(pushedData)\n        console.log(roomsdata);\n        \n\n    },[])\n \n  const statushandler =()=>{\n    setl(true)\n    const sta = roomsdata.every((obj:any)=>obj.rooms.length>0)\n    if(sta){\n      axios.post(\"https://revivohotelmanagment-app.onrender.com/api/hoteldata/room/availibility\",{\n        data:roomsdata\n      },{\n        headers:{ \n           authorization:localStorage.getItem(\"SavedToken\")\n          \n          \n        }\n      }).then((res)=>{\n        router.push('http://localhost:3000/hotel/services')\n      }\n      )\n      .catch((err)=>console.log(err)\n      )\n      \n    }\n    else{\n      console.log(\"mat karo\");\n      \n    }\n    \n  \n\n  }\n    \n    console.log(roomsdata);\n  \n    \n \n\n\n  return (\n    <div className={style.main}>\n        <div className={style.into_cont}>\n            <h1>Add Capacity</h1> <Image src={Logo} alt='dd'/>\n        </div>\n        <div><Statusbar updatevalue={50} prieveasevalue={38}/></div>\n        <div className={style.room_cont}>\n            {\n                count?.map((a: string,index:any)=>(<Room  key={index}  roomsdata={roomsdata} setroomsdata={setroomsdata} pp={l} room={a}/>))\n            }\n            \n\n\n        </div>\n        <div className={style.btn_cont}>\n            <button className={style.back_btn}  >Back</button> <button onClick={statushandler} className={style.cont}>Continue</button>\n\n        </div>\n    </div>\n  )\n}\n\nexport default Capasity\n\n \n","/home/rohan/Desktop/appUI/src/pages/hotel/Enterdetails.tsx",["149"],[],"import React, { useState, useRef } from \"react\";\nimport styles from \"../../styles/hotel.module.css\";\nimport Image from \"next/image\";\nimport logo from \"../../../public/Frame 2655 1.png\";\nimport home from \"../../../public/hotelpub/homelogo.png\";\nimport address from \"../../../public/hotelpub/address.png\";\nimport gst from \"../../../public/gstlogo.svg\";\nimport upload from \"../../../public/hotelpub/fileupload.png\";\nimport axios from \"axios\";\nimport Router, { useRouter } from \"next/router\";\nimport { useForm } from \"react-hook-form\";\nimport joi, { number } from \"joi\";\nimport { ErrorMessage } from \"@hookform/error-message\"\n\nimport mail from \"../../../public/hotelpub/mail.png\";\nimport phonebook from \"../../../public/hotelpub/phonebook.png\";\nimport phon from \"../../../public/hotelpub/phonr.png\";\nimport Statusbar from \"@/materialUI/Statusbar\";\nimport Circularloader from \"@/materialUI/Circularloader\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nconst Schema = joi.object({\n  hotelname: joi\n    .string()\n    .min(3)\n    .max(20)\n    .required()\n    .pattern(/^[a-zA-Z ]+$/),\n  email: joi.string().required().regex(/[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/).messages({\n    \"string.email\": \"Invalid email format\",\n    \"any.required\": \"Email is required\",\n  }),\n  contact: joi\n    .string()\n    .pattern(/^\\d{10}$/)\n    .required()\n    .messages({\n      \"string.pattern.base\": \"Invalid mobile number format\",\n      \"any.required\": \"Mobile number is required\",\n    }),\n  city: joi\n    .string()\n    .pattern(/^[a-zA-Z]+$/)\n    .min(3)\n    .max(30)\n    .required(),\n  address: joi\n    .string()\n    \n    .min(3)\n    .max(50)\n    .required(),\n  GSTIN: joi\n    .string()\n    .regex(/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Za-z]{1}Z[0-9A-Za-z]{1}$/)\n    .required()\n    .messages({\n      \"string.pattern.base\": \"Invalid GSTIN format\",\n      \"any.required\": \"GSTIN is required\",\n    }),\n});\n\nconst Enterdetails = () => {\n  const {\n    register,\n    setError,\n    formState: { errors },\n    handleSubmit,\n  } = useForm({\n    resolver: joiResolver(Schema),\n  });\n\n  React.useEffect(() => {\n    const toke = localStorage.getItem(\"SavedToken\");\n    if (!toke) {\n      router.push(\"http://localhost:3000/auth\");\n    }\n  }, []);\n  const [name, setname] = useState(\"File Not Select\");\n  const [loadershow, setloadershow] = useState(true);\n  const router = useRouter();\n  const [logopath, setlogopath] = React.useState(\"\");\n  const onSubmit = (data: any) => {\n    console.log(errors);\n\n    const token = localStorage.getItem(\"SavedToken\");\n\n    console.log(token);\n    data.logopath = logopath;\n\n    setloadershow(false);\n\n    axios\n      .post(\n        \"https://revivohotelmanagment-app.onrender.com/api/hoteldata/details\",\n        data,\n        {\n          headers: {\n            authorization: token,\n          },\n        }\n      )\n      .then((res) => {\n        if ((res.data.completedstage = \"contact details filled\")) {\n          router.push(\"http://localhost:3000/hotel/varification\");\n          setloadershow(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setloadershow(true);\n      });\n  };\n\n  const sohan = (e: any) => {\n    console.log(e.target.files[0]);\n\n    const ss: any = e?.target.value;\n    console.log(ss);\n\n    const pp: any = ss.match(/[\\/\\\\]([\\w\\d\\s\\.\\-\\(\\)]+)$/)[1];\n    if (!pp) {\n      return;\n    }\n    setname(pp);\n    const formdata = new FormData();\n    formdata.append(\"file\", e.target.files[0]);\n    axios\n      .post(\n        \"https://revivohotelmanagment-app.onrender.com/logoupload\",\n        formdata\n      )\n      .then((res) => setlogopath(res.data));\n  };\n  return (\n    <div className={styles.main}>\n      <div style={loadershow ? { display: \"none\" } : { display: \"block\" }}>\n        <Circularloader />\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={styles.logo_cont}>\n          <h1>Let’s get started</h1>\n          <Image src={logo} alt=\"aa\" />\n        </div>\n        <Statusbar updatevalue={12} prieveasevalue={0} />\n        <div className={styles.add_rap}>\n          <h1>Enter Hotel details to start</h1>\n          <div className={styles.input_rap}>\n            <div>\n              <Image src={home} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\"\n                placeholder=\"Hotel Name\"\n                {...register(\"hotelname\", { required: true })}\n              /><span>{errors.hotelname?.message.toString()}</span>\n            </div>\n            <div>\n              <Image src={mail} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\" inputMode=\"email\"\n                {...register(\"email\", { required: true })}\n                placeholder=\"Email Address\"\n              />\n              <span>{errors.email?.message.toString()}</span>\n            </div>\n            <div>\n              <Image src={phon} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\" maxLength={10} inputMode=\"numeric\"\n                placeholder=\"Contact Number\"\n                {...register(\"contact\", { required: \"contact is required\"})}\n              />\n              <span>{errors.contact?.message.toString()}</span>\n            </div>\n            <div>\n              <Image src={address} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                {...register(\"city\", { required: true })}\n              /><span>{errors.city?.message.toString()}</span>\n            </div>\n            <div>\n              <Image src={phonebook} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\"\n                placeholder=\"Address \"\n                {...register(\"address\", { required: true })}\n              /><span>{errors.address?.message.toString()}</span>\n            </div>\n            <div>\n              <Image src={gst} alt=\"hu\" />{\" \"}\n              <input\n                type=\"text\"\n                placeholder=\"GSTIN\"\n                {...register(\"GSTIN\", { required: true })}\n              /><span>{errors.GSTIN?.message.toString()}</span>\n            </div>\n          </div>\n\n          <div className={styles.upload_cont}>\n            <Image src={upload} alt=\"upoad\" />\n            <div className={styles.uprap}>\n              <label htmlFor=\"file_name\">\n                <h3>upload logo</h3>{\" \"}\n              </label>\n              <div className={styles.setpp}>\n                <h3 className={styles.file_n}>{name}</h3>\n              </div>\n            </div>\n\n            <input\n              onChange={sohan}\n              accept=\".png,.jpg\"\n              id=\"file_name\"\n              name=\"file_name\"\n              type=\"file\"\n              alt=\"y7\"\n              style={{ visibility: \"hidden\" }}\n            />\n          </div>\n          <h2 className={styles.info}>You can update this in settings</h2>\n          <div className={styles.btn_cont}>\n            <button className={styles.back_btn}>Back</button>{\" \"}\n            <button type=\"submit\" className={styles.cont}>\n              Continue\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Enterdetails;\n","/home/rohan/Desktop/appUI/src/pages/hotel/Policy.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/hotel/Services.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/hotel/Uploadroomimage.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/hotel/Varification.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/Welcome.tsx",[],[],"/home/rohan/Desktop/appUI/src/pages/auth/Index.tsx",[],[],{"ruleId":"150","severity":1,"message":"151","line":39,"column":8,"nodeType":"152","endLine":39,"endColumn":21,"suggestions":"153"},{"ruleId":"154","severity":2,"message":"155","line":186,"column":43,"nodeType":"156","endLine":186,"endColumn":51},{"ruleId":"150","severity":1,"message":"157","line":50,"column":7,"nodeType":"152","endLine":50,"endColumn":9,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"159","line":77,"column":6,"nodeType":"152","endLine":77,"endColumn":8,"suggestions":"160"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array. You can also do a functional update 'setProgress(p => ...)' if you only need 'progress' in the 'setProgress' call.","ArrayExpression",["161"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"sohan\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook React.useEffect has missing dependencies: 'count' and 'roomsdata'. Either include them or remove the dependency array.",["162"],"React Hook React.useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["163"],{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [progress, updatevalue]",{"range":"170","text":"171"},"Update the dependencies array to be: [count, roomsdata]",{"range":"172","text":"173"},"Update the dependencies array to be: [router]",{"range":"174","text":"175"},[843,856],"[progress, updatevalue]",[1301,1303],"[count, roomsdata]",[2210,2212],"[router]"]